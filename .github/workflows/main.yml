name: Update fund holdings

on:
  schedule:
    - cron: 0 0,12 * * *

  workflow_dispatch:

jobs:
  etl:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: ARKK
        run: node index.js "ARK_INNOVATION_ETF_ARKK_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: ARKQ
        run: node index.js "ARK_AUTONOMOUS_TECHNOLOGY_&_ROBOTICS_ETF_ARKQ_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: ARKW
        run: node index.js "ARK_NEXT_GENERATION_INTERNET_ETF_ARKW_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: ARKG
        run: node index.js "ARK_GENOMIC_REVOLUTION_MULTISECTOR_ETF_ARKG_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: ARKF
        run: node index.js "ARK_FINTECH_INNOVATION_ETF_ARKF_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: ARKX
        run: node index.js "ARK_SPACE_EXPLORATION_&_INNOVATION_ETF_ARKX_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: PRNT
        run: node index.js "THE_3D_PRINTING_ETF_PRNT_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: IZRL
        run: node index.js "ARK_ISRAEL_INNOVATIVE_TECHNOLOGY_ETF_IZRL_HOLDINGS.csv"
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      
      - name: Set user agent
        run: echo "user_agent='Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0'" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Download ARKK Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKK_Trades.xls

      - name: Download ARKQ Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKQ_Trades.xls

      - name: Download ARKW Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKW_Trades.xls

      - name: Download ARKG Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKG_Trades.xls

      - name: Download ARKF Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKF_Trades.xls

      - name: Download ARKX Intraday Trades
        continue-on-error: true
        run: wget -P tmp/${{ steps.date.outputs.date }} -U ${{ env.user_agent }} https://ark-funds.com/auto/trades/ARK_ARKX_Trades.xls

      - name: Get current datetime
        id: datetime
        run: echo "::set-output name=datetime::$(date)"

      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          message: Add fund holdings at ${{ steps.datetime.outputs.datetime }}
          add: '[".csv", ".xls"]'
